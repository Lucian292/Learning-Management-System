@using LearningManagementSystem.App.Auth
@using LearningManagementSystem.App.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject CustomStateProvider AuthStateProvider
@inject RoleAuthorizationService AuthorizationService

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">

<style>
	.navbar {
		display: flex;
		justify-content: flex-end;
		margin: 0px;
		text-align: center;
	}

	.nav-link {
		justify-content: center;
	}

	.nav-link:hover {
		font-weight: bold;
	}

	.account-buttons {
		display: flex;
		margin-left: auto;
	}

	.btn-login {
		background-color: #fc940c;
		color: white;
		border-radius: 10px; 
		justify-content: center;
	}

	.btn-login:hover {
		background-color: #fcba5c;
	}

	.btn-sign-up:hover {
		font-weight: bold;
	}

	@@media (max-width: 992px) {
		.navbar-nav {
			flex: 0 0 50%;
			max-width: 100%;
			text-align: center;
		}

		.account-buttons {
			flex-direction: column;
		}
	}

</style>

<div class="navbar navbar-expand-lg navbar-light bg-light">
	<button class="navbar-toggler" type="button" @onclick="ToggleNavMenu">
		<span class="navbar-toggler-icon"></span>
	</button>
	<a class="navbar-brand ml-auto" href="#">
		<img src="/Images/Logo.png" alt="Company Logo" class="navbar-logo" />
	</a>
	<div class="@NavMenuCssClass navbar-collapse">
		<CascadingAuthenticationState>
<Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
				<Authorized>
					<div class="navbar-nav">
			<NavLink class="nav-item nav-link" href="#" Match="NavLinkMatch.All">Home</NavLink>
			<NavLink class="nav-item nav-link" href="#">Profile</NavLink>
			<NavLink class="nav-item nav-link" href="categoryoverview">Categories</NavLink>
			@if (HasAdminRole)
			{
        <NavLink class="nav-item nav-link" href="addcategory">Add Category</NavLink>
      }
			<NavLink class="nav-item nav-link" href="courseoverview">Courses</NavLink>
			@if (HasAdminRole || HasProfessorRole)
			{
        <NavLink class="nav-item nav-link" href="addcourse">Add Course</NavLink>
      }
			<NavLink class="nav-item nav-link" href="chapteroverview">Chapters</NavLink>
			@if (HasAdminRole || HasProfessorRole)
			{
        <NavLink class="nav-item nav-link" href="addchapter">Add Chapter</NavLink>
      }
			<NavLink class="nav-item nav-link" href="#">Pricing</NavLink>
			<NavLink class="nav-item nav-link" href="#">About Us</NavLink>
			<NavLink class="nav-item nav-link" href="#">Contact</NavLink>
		</div>
		</Authorized>
		<NotAuthorized>
		<div class="account-buttons">
			<NavLink class="btn btn-sign-up" href="register">Sign Up</NavLink>
			<NavLink class="btn btn-login" href="login">Login</NavLink>
		</div>
		</NotAuthorized>
			</Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
		</CascadingAuthenticationState>
	</div>
</div>

<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>


@code {
	private bool collapseNavMenu = true;

	private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

	private AuthenticationState authState;

	public bool HasAdminRole = false;
	public bool HasProfessorRole = false;

	protected override async Task OnInitializedAsync()
	{
		authState = await AuthStateProvider.GetAuthenticationStateAsync();

		var user = authState.User;
		var claims = user.Claims.ToList();
		
		//var userIdClaim = claims.FirstOrDefault(claim => claim.Type == "nameid");

		HasAdminRole = claims.Any(claim => claim.Type == "role" && claim.Value == "Admin");
		HasProfessorRole = claims.Any(claim => claim.Type == "role" && claim.Value == "Professor");
	}

	private bool IsUserAuthenticated => authState.User.Identity.IsAuthenticated;

	private void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}
}
