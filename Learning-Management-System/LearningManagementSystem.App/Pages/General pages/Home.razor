@page "/"
@using LearningManagementSystem.App.Auth
@using LearningManagementSystem.App.Contracts
@using LearningManagementSystem.App.Services
@using LearningManagementSystem.App.ViewModels
@using Microsoft.AspNetCore.Components.Authorization
@inject IJSRuntime JSRuntime
@inject CustomStateProvider AuthStateProvider

<style>
    .content {
        padding-left: 5%;
        padding-right: 5%;
    }
    .explore-button{
        display: flex;
        justify-content: center;
        margin-top: 2%;
        margin-bottom: 2%;
    }
    .btn-explore {
        background-color: #fc940c;
        color: white;
        border-radius: 10px;
        justify-content: center;
    }

    .title {
        text-align: center;
        font-size: 34px;
        font-weight: 600;
        margin-top: 2%;
    }

    .title-text {
        color: #fc940c;
    }

    .title-second-text {
        text-align: center;
        font-size: 20px;
        font-weight: 500;
        margin-bottom: 0px;
    }

    .title-third-text {
        text-align: center;
        font-size: 15px;
        font-weight: 400;
        margin-top: 0px;
    }

    .category-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
    }

    .category-description {
        margin: 0;
        text-align: left;
    }

    .category-name {
        margin: 0;
        text-align: left;
        font-size: 30px;
        font-weight: 600;
    }
    

    .category-card {
        border: 1px solid #ccc;
        border-radius: 10px;
        margin: 10px;
        padding: 30px;
        width: calc(100% / 3 - 40px); /* 4 carduri pe rând pe desktop */
        height: 400px;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }


        .category-card h2 {
            font-size: 20px;
            margin: 0 0 10px 0;
            font-weight: bold;
        }

        .category-card p {
            margin: 0;
        }

    .button-container {
        display: flex;
        justify-content: flex-end;
        align-items: end;
    }

    .course-button {
        background-color: #ff9404;
        color: white;
        border: none;
        outline: none; /* Adaugă această regulă pentru a elimina conturul albastru la focus */
        border-radius: 5px;
    }

        .course-button:hover {
            background-color: #fcba5c;
            color: black;
            border: none;
            outline: none;
        }


        .subtitle {
            margin-top: 2%;
        }



 
        .counter-categories {
            text-align: right;
            font-weight: bold;
            font-size: 50px;
        }

        .button-container {
            display: flex;
            justify-content: flex-end; /* Change justify-content to flex-end */
            margin-top: 2%;
        }


    .course-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
    }

    .course-description {
        margin: 0;
        text-align: left;
    }

    .course-name {
        margin: 0;
        text-align: left;
        font-size: 30px;
        font-weight: 600;
    }


    .course-card {
        border: 1px solid #ccc;
        border-radius: 10px;
        margin: 10px;
        padding: 30px;
        width: calc(100% / 2 - 40px); /* 2 carduri pe rând pe desktop */
        height: 400px;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }


        .course-card h2 {
            font-size: 20px;
            margin: 0 0 10px 0;
            font-weight: bold;
        }

        .course-card p {
            margin: 0;
        }


    .chapters-button {
        background-color: #ff9404;
        color: white;
        border: none;
        outline: none; /* Adaugă această regulă pentru a elimina conturul albastru la focus */
        border-radius: 5px;
        width: 100%;
    }

        .chapters-button:hover {
            background-color: #fcba5c;
            color: black;
            border: none;
            outline: none;
        }

    .counter-courses {
        text-align: right;
        font-weight: bold;
        font-size: 50px;
        margin-bottom: 0px;
    }




    @@media (max-width: 768px) {
      iframe {
        width: 100%;
        height: 400px;
        margin-bottom: 2%;
      }
    }

    @@media (min-width: 769px) {
      iframe {
        width: 100%;
        height: 800px;
        margin-bottom: 2%;
      }
    }

    @@media (max-width: 1500px) {
        /* 3 carduri pe rând pe tabletă */
        .category-card {
            width: calc(100% / 2 - 40px);
            height: 400px;
        }
        .counter-categories {
            font-size: 30px;
        }
        .category-name {
            font-size: 20px;
        }
        .category-description {
            font-size: 15px;
        }
        .course-button {
            font-size: 10px;
        }
        .subtitle {
            font-size: 20px;
        }
        .course-card {
            width: calc(100% / 1 - 40px);
            height: 400px;
        }
        .about-categories {
            font-size: 15px;
        }
        .about-courses {
            font-size: 15px;
        }
        .counter-courses {
            font-size: 30px;
        }
            .course-name {
            font-size: 20px;
        }
        .course-description {
            font-size: 13px;
        }
        .chapters-button {
            font-size: 10px;
        }
        

    }
    


    @@media (max-width: 820px) {
        /* 2 carduri pe rând pe mobile */
        .category-card {
            width: calc(100% / 1 - 40px);
            height: 300px;
        }

        .counter-categories {
            font-size: 30px;
        }
        .category-name {
            font-size: 15px;
        }
        .category-description {
            font-size: 10px;
        }
        .course-button {
            font-size: 10px;
        }
        .subtitle {
            font-size: 20px;
        }
        .about-categories {
            font-size: 15px;
        }
        .course-card {
            width: calc(100% / 1 - 40px);
            height: 300px;
        }
        .about-courses {
            font-size: 15px;
        }
        .counter-courses {
            font-size: 30px;
        }
        .course-name {
            font-size: 15px;
        }
        .course-description {
            font-size: 10px;
        }
        .chapters-button {
            font-size: 10px;
        }
 

    }    

</style>
    <div class="content"
        <div class="title">
            <p><span class="title-text">Upgrade</span> Your Brain</p>
        </div>

        <div>
            <p class="title-second-text">with Online Courses about everything in the world.</p>
            <p class="title-third-text">Learn from Industry Exprerts and Enhance Your Skills</p>
        </div>

        <div class="explore-button">
            <NavLink class="btn btn-explore" @onclick="ExploreCourses">Explore Courses</NavLink>
        </div>

        <div style="text-align: center; margin-top: 2%;">
            <iframe src="https://www.youtube.com/embed/6GkSSgWnrlA" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
        <div>
            <h2 class="subtitle">The fields in which you can learn</h2>
            <p class="about-categories">From technology to creativity, there's a course to spark every interest. Dive into a world of learning tailored to your passions!</p>
        </div>

        <div class="category-container">
            @if (Categories != null)
            {
                    @foreach (var cat in Categories)
                    {
                        if (CategoriesCounter <= 6)
                        {
                                                    <div class="category-card">
                                                        <p class="counter-categories">@CategoriesCounter</p>
                                                        <p class="category-name">@cat.CategoryName</p>
                                                        <p class="category-description">@cat.Description</p>
                                                        <div class="button-container">
                                                            <button class="btn btn-primary course-button @(HasAdminRole ? "" : "single-button")" @onclick="() => NavigateToCategoryCourses(cat.CategoryId)">View Courses</button>

                                                        </div>
                                                    </div>
                            CategoriesCounter++;
                        }
                    }
            }
        </div>

        <div>
            <h2 class="subtitle">Our courses</h2>
            <p class="about-courses">Explore new opportunities and uncover the captivating world of knowledge on our platform! Innovative courses await you, ready to stimulate your mind and open uncharted horizons.</p>
        </div>
        <div class="course-container">
                    @if (Courses != null)
                    {
                        @foreach (var course in Courses)
                        {
                            if (CoursesCounter <= 6)
                            {
                                                        <div class="course-card ">
                                                            <p class="counter-courses">@CoursesCounter</p>
                                                            <p class="course-name">@course.Title</p>
                                                            <p class="course-description">@course.Description</p>
                                                            <div class="button-container">
                                                                <button class="btn btn-primary chapters-button @(HasAdminRole ? "" : "single-button")" @onclick="() => NavigateToCourseChapters(course.CourseId)">View Chapters</button>
                                                           </div>
                                                    </div>
                                CoursesCounter++;
                            }
                        }
                    }
        </div>
    </div>


<CascadingAuthenticationState>
    <Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
        <NotAuthorized>
            <button class="btn btn-lg btn-primary btn-block" @onclick="NavigateToLogin">Click here to log in</button>
            <br />
            <button class="btn btn-lg btn-primary btn-block" @onclick="NavigateToRegister">Click here to register</button>
        </NotAuthorized>
    </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
</CascadingAuthenticationState>
@functions {
    [Inject]
    public ICategoryDataService CategoryDataService { get; set; }

    [Inject]
    public ICourseDataService CourseDataService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public IAuthenticationService AuthenticationService { get; set; }

    public List<CategoryViewModel> Categories { get; set; }

    public int CategoriesCounter { get; set; }

    public int CoursesCounter { get; set; }

    public List<CourseDto> Courses { get; set; }


    public bool HasAdminRole = false;

    protected override async Task OnInitializedAsync()
    {
        CategoriesCounter = 1;
        CoursesCounter = 1;

        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        var user = authState.User;
        var claims = user.Claims.ToList();

        //var userIdClaim = claims.FirstOrDefault(claim => claim.Type == "nameid");

        HasAdminRole = claims.Any(claim => claim.Type == "role" && claim.Value == "Admin");

        Categories = (await CategoryDataService.GetCategoriesAsync()).ToList();
        Courses = (await CourseDataService.GetCoursesAsync()).ToList();
    }

    private void NavigateToLogin()
    {
        NavigationManager.NavigateTo("/login");
    }

    private void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }

    private void ExploreCourses()
    {
        NavigationManager.NavigateTo("/categoryoverview");
    }

    private void NavigateToCategoryCourses(Guid categoryId)
    {
        NavigationManager.NavigateTo($"/getcategorycourses/{categoryId}");
    }
    private void NavigateToCourseChapters(Guid courseId)
    {
        NavigationManager.NavigateTo($"/coursechapters/{courseId}");
    }
}